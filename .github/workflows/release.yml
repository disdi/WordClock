# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install Qt
        # You may pin to the exact commit or the version.
        # uses: jurplel/install-qt-action@a962fb91949c8e846a3e4a944d50e7ef5cc3a28a
        uses: jurplel/install-qt-action@v2.11.1

      - name: Install compiler
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      # windows qmake needs a spec for mingw, otherfile the makefile is malformed
      - name: Run qmake
        if: runner.os == 'Windows'
        run: qmake WordClock.pro -spec win32-g++

      - name: Run qmake
        if: runner.os != 'Windows'
        run: qmake WordClock.pro

      - name: Run make
        run: make

      - name: List files
        run: ls

      - name: Upload build artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v2
        with:
          name: WordClock-windows
          path: WordClock.exe

      - name: Compress on mac
        if: runner.os == 'macOS'
        run: tar -zcvf WordClock.tar.gz WordClock.app

      - name: Upload build artifact (macOS)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v2
        with:
          name: WordClock-macos
          path: WordClock.tar.gz

      - name: Upload build artifact (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: WordClock-linux
          path: WordClock

